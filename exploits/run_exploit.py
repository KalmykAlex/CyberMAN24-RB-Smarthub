import os
import sys
import time
import importlib
import subprocess


def submit_flag(command, flag):
    try:
        result = subprocess.run([command, flag], capture_output=True, text=True, check=True)

        # Print the output
        print("Output:")
        print(result.stdout)

        # Print the error (if any)
        if result.stderr:
            print("Error output:")
            print(result.stderr)
    except subprocess.CalledProcessError as e:
        # Handle the error
        print(f"Command {command} failed with return code {e.returncode}")
        print(f"Error message: {e.stderr}")

def main(targets, scenario, script_path):
    module_name = os.path.splitext(os.path.basename(script_path))[0]
    module = importlib.import_module(module_name)

    if not hasattr(module, 'exploit'):
        print(f'The module {exploit_script} does not have a function called \'exploit\'.')
        sys.exit(1)

    for target in targets:
        flag = module.exploit(target) or None
        if flag is None:
            print(f'Could not exploit {target}')
        else:
            submit_flag(f'submit_{scenario}' ,flag)
            time.sleep(0.5)  # anti DoS measure
            print(f'Submitted {flag} for {target}')
            print('---------------------------------------------------------------------')

if __name__ == "__main__":

    if len(sys.argv) != 2:
        print('Usage: python3 run_exploit.py /path/to/exploit.py')
        sys.exit(1)

    scenario = 'smarthub'
    targets = [f'{scenario}.team{n}.cyberman.ro' for n in range(1,26) if n != 10]
    script = sys.argv[1]
    main(targets, scenario, script)
